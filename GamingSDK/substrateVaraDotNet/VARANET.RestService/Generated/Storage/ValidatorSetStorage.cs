//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace VARANET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IValidatorSetStorage interface definition.
    /// </summary>
    public interface IValidatorSetStorage : IStorage
    {
        
        /// <summary>
        /// >> Validators
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetValidators();
        
        /// <summary>
        /// >> ApprovedValidators
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetApprovedValidators();
        
        /// <summary>
        /// >> OfflineValidators
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetOfflineValidators();
    }
    
    /// <summary>
    /// ValidatorSetStorage class definition.
    /// </summary>
    public sealed class ValidatorSetStorage : IValidatorSetStorage
    {
        
        /// <summary>
        /// _validatorsTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> _validatorsTypedStorage;
        
        /// <summary>
        /// _approvedValidatorsTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> _approvedValidatorsTypedStorage;
        
        /// <summary>
        /// _offlineValidatorsTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> _offlineValidatorsTypedStorage;
        
        /// <summary>
        /// ValidatorSetStorage constructor.
        /// </summary>
        public ValidatorSetStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.ValidatorsTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>>("ValidatorSet.Validators", storageDataProvider, storageChangeDelegates);
            this.ApprovedValidatorsTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>>("ValidatorSet.ApprovedValidators", storageDataProvider, storageChangeDelegates);
            this.OfflineValidatorsTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>>("ValidatorSet.OfflineValidators", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _validatorsTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> ValidatorsTypedStorage
        {
            get
            {
                return _validatorsTypedStorage;
            }
            set
            {
                _validatorsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _approvedValidatorsTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> ApprovedValidatorsTypedStorage
        {
            get
            {
                return _approvedValidatorsTypedStorage;
            }
            set
            {
                _approvedValidatorsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _offlineValidatorsTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> OfflineValidatorsTypedStorage
        {
            get
            {
                return _offlineValidatorsTypedStorage;
            }
            set
            {
                _offlineValidatorsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await ValidatorsTypedStorage.InitializeAsync("ValidatorSet", "Validators");
            await ApprovedValidatorsTypedStorage.InitializeAsync("ValidatorSet", "ApprovedValidators");
            await OfflineValidatorsTypedStorage.InitializeAsync("ValidatorSet", "OfflineValidators");
        }
        
        /// <summary>
        /// Implements any storage change for ValidatorSet.Validators
        /// </summary>
        [StorageChange("ValidatorSet", "Validators")]
        public void OnUpdateValidators(string data)
        {
            ValidatorsTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Validators
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetValidators()
        {
            return ValidatorsTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ValidatorSet.ApprovedValidators
        /// </summary>
        [StorageChange("ValidatorSet", "ApprovedValidators")]
        public void OnUpdateApprovedValidators(string data)
        {
            ApprovedValidatorsTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> ApprovedValidators
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetApprovedValidators()
        {
            return ApprovedValidatorsTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ValidatorSet.OfflineValidators
        /// </summary>
        [StorageChange("ValidatorSet", "OfflineValidators")]
        public void OnUpdateOfflineValidators(string data)
        {
            OfflineValidatorsTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> OfflineValidators
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<VARANET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetOfflineValidators()
        {
            return OfflineValidatorsTypedStorage.Get();
        }
    }
}
